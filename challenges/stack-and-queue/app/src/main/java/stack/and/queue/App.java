/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package stack.and.queue;

import java.io.IOException;
import java.util.Stack;

public class App {
    public String getGreeting() {
        return "Hello World!";
    }

    public static void main(String[] args) throws IOException {

        System.out.println(new App().getGreeting());

        Stack stack = new Stack();

        stack.push("D");
        stack.push("O");
        stack.push("A");
        stack.push("A");

//        System.out.println(stack.toString());
//
//        System.out.println(stack.pop());
//        System.out.println(stack.pop());
//
//        System.out.println(stack.peek());

        //===========================Queue=====================
        Queue queue= new Queue();
        queue.enqueue("D");
        queue.enqueue("O");
        queue.enqueue("A");
        queue.enqueue("A");

        System.out.println(queue);

        System.out.println(queue.dequeue());

        System.out.println(queue.peek());

        //==============================PsudoQueue=========================


//        PseudoQueue queue1 = new PseudoQueue();
//
//        queue1.enqueue("20");
//        queue1.enqueue("1");
//        queue1.enqueue("2");
//        queue1.enqueue("3");
//        queue1.enqueue("4");
//
//
//        System.out.println(queue1.dequeue());
//

        //==============================code challenge 12=================================

        AnimalShelter shelter = new AnimalShelter();

        shelter.enqueue(new Cat("looz"));
        shelter.enqueue(new Cat("sugar"));
        shelter.enqueue(new Cat("mejhem"));


        shelter.enqueue(new Dog("oklah"));
        shelter.enqueue(new Dog("oreo"));
        shelter.enqueue(new Dog("husky"));

        System.out.println(shelter);
        System.out.println(shelter.catQueue.peek().toString());

        shelter.dequeue("cat");
        System.out.println(shelter);

        shelter.dequeue("dog");
        System.out.println(shelter);

        //    ==================================code challenge 13 ==================================

        ValidateBrackets a = new ValidateBrackets();

        System.out.println(a.validateBrackets(")"));
        System.out.println(a.validateBrackets("{}{{}}"));

        //    ==================================code challenge 14 ==================================


        MaxStack maxStack= new MaxStack();
        maxStack.push(3);
        maxStack.push(5);
        maxStack.push(7);
        maxStack.push(2);

        System.out.println(maxStack.getMax());

    }

}
